<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on ESIEA security club</title>
    <link>https://clubsecu-esiea.github.io/posts/</link>
    <description>Recent content in Posts on ESIEA security club</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Beerware shit</copyright>
    <lastBuildDate>Mon, 08 Aug 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://clubsecu-esiea.github.io/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[corCTF 2022 - pwn] zigzag</title>
      <link>https://clubsecu-esiea.github.io/posts/zigzag/</link>
      <pubDate>Mon, 08 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://clubsecu-esiea.github.io/posts/zigzag/</guid>
      <description>Introduction zigzag is a zig heap challenge I did during the corCTF 2022 event. It was pretty exotic given we have to pwn a heap like challenge written in zig. It is not using the C allocator but instead it uses the GeneralPurposeAllocator, which makes the challenge even more interesting. Find the tasks here.
TL; DR  Understanding zig GeneralPurposeAllocator internals Hiijack the BucketHeader of a given bucket to get a write what were / read what where primitive.</description>
    </item>
    
    <item>
      <title>[corCTF 2022 - pwn] cshell2</title>
      <link>https://clubsecu-esiea.github.io/posts/cshell2/</link>
      <pubDate>Sun, 07 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://clubsecu-esiea.github.io/posts/cshell2/</guid>
      <description>Introduction cshell2 is a heap challenge I did during the corCTF 2022 event. It was pretty classic so I will not describe a lot. If you begin with heap challenges, I advice you to read previous heap writeup.
TL; DR  Fill tcache. Heap overflow in edit on the bio field which allows to leak the address of the unsortedbin. Leak heap and defeat safe-linking to get an arbitrary write through tcache poisoning.</description>
    </item>
    
    <item>
      <title>[diceCTF 2022 - pwn] catastrophe</title>
      <link>https://clubsecu-esiea.github.io/posts/catastrophe/</link>
      <pubDate>Thu, 28 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://clubsecu-esiea.github.io/posts/catastrophe/</guid>
      <description>Introduction  I just learned how to use malloc and free&amp;hellip; am I doing this right?
 catastrophe is a heap challenge I did during the diceCTF 2022. I did have a lot of issues with the libc and the dynamic linker, thus I did a first time the challenge with the libc that was in /lib/libc.so.6, then I figured out thanks to my teammate supersnail that I was using the wrong libc.</description>
    </item>
    
    <item>
      <title>[HeroCTF v4 - crypto] How (not) to make a crypto challenge</title>
      <link>https://clubsecu-esiea.github.io/posts/oracles_apprentice/</link>
      <pubDate>Sun, 29 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://clubsecu-esiea.github.io/posts/oracles_apprentice/</guid>
      <description># The oracle&#39;s apprentice Looks like Tiresias, the blind oracle, took a nice long holiday and his apprentice had to cover for him. She&#39;s new to the job so if she forgets anything... you&#39;ll just have to deal with it. Good luck ! `Format : Hero{flag}` `Author : Alol` (NB: that&#39;s me !) The premise As it turns out I fucked up. The 4th edition of the HeroCTF is about to end after a weekend of everything going surprisingly well.</description>
    </item>
    
    <item>
      <title>[HackTheBox Cyber Apocalypse 2022 - pwn] Once and for all</title>
      <link>https://clubsecu-esiea.github.io/posts/onceandforall/</link>
      <pubDate>Thu, 19 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://clubsecu-esiea.github.io/posts/onceandforall/</guid>
      <description>Once for all is a heap challenge I did during the HackTheBox Cyber Apocalypse event. This is a classic unsorted bin attack plus a FSOP on stdin. Find the tasks and the final exploit here and here.
Reverse engineering All the snippets of pseudo-code are issued by IDA freeware:
int __cdecl main(int argc, const char **argv, const char **envp) { int v4; // [rsp+18h] [rbp-8h] BYREF  int i; // [rsp+1Ch] [rbp-4h]  for ( i = 0; i &amp;lt;= 49; ++i ) { puts(s); printf(&amp;amp;unk_1310); __isoc99_scanf(&amp;amp;unk_13C8, &amp;amp;v4); puts(s); switch ( v4 ) { case 1: small_alloc(s); break; case 2: fix(s); break; case 3: examine(s); break; case 4: savebig(s); break; case 5: exit(0); default: puts(&amp;#34;[-] Invalid choice!</description>
    </item>
    
    <item>
      <title>[TRACS 2021 - RE] Coffre</title>
      <link>https://clubsecu-esiea.github.io/posts/safe/</link>
      <pubDate>Sun, 05 Dec 2021 00:00:00 +0000</pubDate>
      
      <guid>https://clubsecu-esiea.github.io/posts/safe/</guid>
      <description>Intro  Epreuve 12-3 – Coffre En tant que stagiaire vous avez accès aux locaux de la NSB. Vous allez collecter des informations dans les locaux. Un coffre est présent dans les locaux en salle rideau. Il appartient à Richard Cresus de la Tune. Essayez d’ouvrir ce coffre. Quel est l’IBAN contenu dans le coffre ? Format de la réponse : IBAN sans séparateur.
 Basically, we have to crack open an electronic safe.</description>
    </item>
    
    <item>
      <title>About us</title>
      <link>https://clubsecu-esiea.github.io/posts/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://clubsecu-esiea.github.io/posts/about/</guid>
      <description>We&amp;rsquo;re a bunch of security enthusiasts and students from the ESIEA engineering school. We aim to work on various security related subjects. On this website you will mainly find some write-ups about CTF challenges.</description>
    </item>
    
  </channel>
</rss>
